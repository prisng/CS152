object session {
  println("Welcome to the Scala worksheet")       //> Welcome to the Scala worksheet

  /********** #1 **********/
  // generic compose combinator
  
  /*
  def compose[T](f: T => T, g: T => T): T => T = {
		def r(x: T):
			T = f(g(x));
   	r _
	}
	*/
	
	def compose[A, B](f: A => B, g: B => A): B => B = {
		def r(x: B):
			B = f(g(x));
   	r _
	}                                         //> compose: [A, B](f: A => B, g: B => A)B => B
	def triple(x: Int): Int = 3 * x           //> triple: (x: Int)Int
	
	def square(x: Int) = x * x                //> square: (x: Int)Int
	
	//println(compose(triple(3), square(3)))
	
	 def inc(x: Double) = x + 1               //> inc: (x: Double)Double
    def double(x: Double) = 2 * x                 //> double: (x: Double)Double
def compose2[A,B,C](f: B => C, g: A => B, x: A): C = f(g(x))
                                                  //> compose2: [A, B, C](f: B => C, g: A => B, x: A)C
println(compose2(double, inc, 2.toDouble))        //> 6.0
  
  /********** #2 **********/
  
  
  /********** #3 **********/
  
  
  /********** #4 **********/
  
  
  /********** #5 **********/
  
  
}